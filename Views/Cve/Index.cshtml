@model IEnumerable<CveWebApp.Models.CveUpdateStaging>

@{
    ViewData["Title"] = "CVE List";
    var firstItem = Model.FirstOrDefault();
}

<h1>CVE List</h1>
<p>Total CVEs loaded: @Model.Count()</p>
<form method="get" asp-action="Index" class="mb-3">
    <div class="row">
        <div class="col-md-2">
            <label for="productFamily" class="form-label">Product Family:</label>
            <select id="productFamily" name="productFamily" class="form-control" onchange="this.form.submit()">
                <option value="">All Families</option>
                @foreach (var pf in ViewBag.ProductFamilies as List<string> ?? new List<string>())
                {
                    if ((string)ViewBag.SelectedProductFamily == pf)
                    {
                        <option value="@pf" selected="selected">@pf</option>
                    }
                    else
                    {
                        <option value="@pf">@pf</option>
                    }
                }
            </select>
        </div>
        <div class="col-md-2">
            <label for="product" class="form-label">Product:</label>
            <select id="product" name="product" class="form-control" onchange="this.form.submit()">
                <option value="">All Products</option>
                @foreach (var p in ViewBag.Products as List<string> ?? new List<string>())
                {
                    if ((string)ViewBag.SelectedProduct == p)
                    {
                        <option value="@p" selected="selected">@p</option>
                    }
                    else
                    {
                        <option value="@p">@p</option>
                    }
                }
            </select>
        </div>
        <div class="col-md-2">
            <label for="maxSeverity" class="form-label">Severity:</label>
            <select id="maxSeverity" name="maxSeverity" class="form-control" onchange="this.form.submit()">
                <option value="">All Severities</option>
                @foreach (var s in ViewBag.MaxSeverities as List<string> ?? new List<string>())
                {
                    if ((string)ViewBag.SelectedMaxSeverity == s)
                    {
                        <option value="@s" selected="selected">@s</option>
                    }
                    else
                    {
                        <option value="@s">@s</option>
                    }
                }
            </select>
        </div>
        <div class="col-md-3">
            <label for="article" class="form-label">Article Search:</label>
            <input id="article" type="text" name="article" class="form-control" placeholder="Article contains..." value="@ViewBag.ArticleQuery" />
        </div>
        <div class="col-md-3 d-flex align-items-end">
            <button type="submit" class="btn btn-primary me-2">Filter</button>
            <a href="@Url.Action("Index")" class="btn btn-secondary">Reset</a>
        </div>
    </div>
</form>

<div style="margin-bottom: 1em;">
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-start">
            <li class="page-item @(ViewBag.CurrentPage <= 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new {
                    page = ViewBag.CurrentPage - 1,
                    productFamily = ViewBag.SelectedProductFamily,
                    product = ViewBag.SelectedProduct,
                    maxSeverity = ViewBag.SelectedMaxSeverity,
                    article = ViewBag.ArticleQuery
                })" tabindex="-1">Previous</a>
            </li>
            <li class="page-item disabled">
                <span class="page-link">
                    Page @ViewBag.CurrentPage of @ViewBag.TotalPages
                </span>
            </li>
            <li class="page-item @(ViewBag.CurrentPage >= ViewBag.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new {
                    page = ViewBag.CurrentPage + 1,
                    productFamily = ViewBag.SelectedProductFamily,
                    product = ViewBag.SelectedProduct,
                    maxSeverity = ViewBag.SelectedMaxSeverity,
                    article = ViewBag.ArticleQuery
                })">Next</a>
            </li>
        </ul>
    </nav>
</div>

<style>
.high-score-row {
    background-color: #f8d7da !important; /* Light red background */
}
</style>

<table class="table">
    <thead>
        <tr>
            <th>
                @(firstItem != null ? Html.DisplayNameFor(m => firstItem.ReleaseDate) : "Release Date")
            </th>
            <th>
                @(firstItem != null ? Html.DisplayNameFor(m => firstItem.ProductFamily) : "Product Family")
            </th>
            <th>
                @(firstItem != null ? Html.DisplayNameFor(m => firstItem.Product) : "Product")
            </th>
            <th>
                @(firstItem != null ? Html.DisplayNameFor(m => firstItem.MaxSeverity) : "Max Severity")
            </th>
            <th>
                @(firstItem != null ? Html.DisplayNameFor(m => firstItem.Article) : "Article")
            </th>
            <th>
                @(firstItem != null ? Html.DisplayNameFor(m => firstItem.BaseScore) : "Base Score")
            </th>
            <th>
                @(firstItem != null ? Html.DisplayNameFor(m => firstItem.Details) : "CVE")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (!Model.Any())
        {
            <tr>
                <td colspan="8" class="text-center">No CVEs found.</td>
            </tr>
        }
        else
        {
            foreach (var item in Model)
            {
                var rowClass = (item.BaseScore > 8.0m) ? "table-danger high-score-row" : "";
                <tr class="@rowClass">
                    <td>@item.ReleaseDate?.ToString("yyyy-MM-dd")</td>
                    <td>@item.ProductFamily</td>
                    <td>@item.Product</td>
                    <td>@item.MaxSeverity</td>
                    <td>@item.Article</td>
                    <td>@item.BaseScore</td>
                    <td>@item.Details</td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">Details</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>