@model IEnumerable<CveWebApp.Models.CveUpdateStaging>

@{
    ViewData["Title"] = "CVE Dashboard";
}

<div style="margin-bottom: 1em;">
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-start">
            <li class="page-item @(ViewBag.CurrentPage <= 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.CurrentPage - 1 })" tabindex="-1">Previous</a>
            </li>
            <li class="page-item disabled">
                <span class="page-link">
                    Page @ViewBag.CurrentPage of @ViewBag.TotalPages
                </span>
            </li>
            <li class="page-item @(ViewBag.CurrentPage >= ViewBag.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.CurrentPage + 1 })">Next</a>
            </li>
        </ul>
    </nav>
</div>

<div class="row">
    <div class="col-md-12">
        <h1>CVE Dashboard</h1>
        <p>
            <a asp-action="Create" class="btn btn-primary">Add New CVE Entry</a>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.ReleaseDate)</th>
                        <th>@Html.DisplayNameFor(model => model.ProductFamily)</th>
                        <th>@Html.DisplayNameFor(model => model.Product)</th>
                        <th>@Html.DisplayNameFor(model => model.Platform)</th>
                        <th>@Html.DisplayNameFor(model => model.MaxSeverity)</th>
                        <th>@Html.DisplayNameFor(model => model.BaseScore)</th>
                        <th>@Html.DisplayNameFor(model => model.CustomerActionRequired)</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.ReleaseDate)</td>
                            <td>@Html.DisplayFor(modelItem => item.ProductFamily)</td>
                            <td>@Html.DisplayFor(modelItem => item.Product)</td>
                            <td>@Html.DisplayFor(modelItem => item.Platform)</td>
                            <td>
                                @if (!string.IsNullOrEmpty(item.MaxSeverity))
                                {
                                    <span class="badge bg-@(GetSeverityClass(item.MaxSeverity))">
                                        @Html.DisplayFor(modelItem => item.MaxSeverity)
                                    </span>
                                }
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.BaseScore)</td>
                            <td>
                                @if (item.CustomerActionRequired.HasValue)
                                {
                                    <span class="badge bg-@(item.CustomerActionRequired.Value ? "warning" : "success")">
                                        @(item.CustomerActionRequired.Value ? "Required" : "Not Required")
                                    </span>
                                }
                            </td>
                            <td>
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">Edit</a>
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info">Details</a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@if (!Model.Any())
{
    <div class="row">
        <div class="col-md-12">
            <div class="alert alert-info" role="alert">
                <h4 class="alert-heading">No CVE entries found</h4>
                <p>There are currently no CVE entries in the database.</p>
                <hr>
                <p class="mb-0">
                    <a asp-action="Create" class="btn btn-primary">Add the first CVE entry</a>
                </p>
            </div>
        </div>
    </div>
}

@functions {
    string GetSeverityClass(string severity)
    {
        return severity?.ToLower() switch
        {
            "critical" => "danger",
            "high" => "warning",
            "medium" => "primary",
            "low" => "secondary",
            _ => "dark"
        };
    }
}
